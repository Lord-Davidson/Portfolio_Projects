SELECT * 
FROM SqlPortfolioProject..CovidDeaths
WHERE continent IS NOT NULL
ORDER BY 3, 4

SELECT * 
FROM SqlPortfolioProject..COVIDVACCINATIONS
ORDER BY 3, 4

-- SELECTING DATA TO BE USED
SELECT location, date, total_cases, new_cases, total_deaths, population
FROM SqlPortfolioProject..CovidDeaths
WHERE continent IS NOT NULL
ORDER BY 1, 2

-- TOTAL CASES VS TOTAL DEATHS
-- LIKELIHOOD OF DYING AFTER CONTRACTING COVID
SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS DEATH_RATE_PERCENTAGE
FROM SqlPortfolioProject..CovidDeaths
WHERE continent IS NOT NULL
-- AND location LIKE '%NIGERIA%' 
ORDER BY 1, 2

-- TOTAL CASES VS POPULATION
SELECT location, date, total_cases, population, (total_cases/population)*100 AS INFECTION_RATE_PERCENTAGE
FROM SqlPortfolioProject..CovidDeaths
WHERE continent IS NOT NULL
-- AND location LIKE '%NIGERIA%'
ORDER BY 1, 2

-- COUNTRIES WITH HIGHEST INFECTION RATE BY POPULATION
SELECT location, MAX(total_cases) AS HIGHEST_INFECTION_COUNT, population, MAX((total_cases/population))*100 AS INFECTION_RATE_PERCENTAGE
FROM SqlPortfolioProject..CovidDeaths
WHERE continent IS NOT NULL
-- AND location LIKE '%NIGERIA%'
GROUP BY population, location
ORDER BY INFECTION_RATE_PERCENTAGE DESC

-- COUNTRIES WITH HIGHEST DEATH COUNT PER POPULATION
SELECT location, MAX(TOTAL_DEATHS) AS TOTAL_DEATH_COUNT
FROM SqlPortfolioProject..CovidDeaths
WHERE continent IS NOT NULL
GROUP BY location
ORDER BY TOTAL_DEATH_COUNT DESC

-- BREAK DOWM BY CONTINENT
-- CONTINENTS WITH THE HIGHEST DEATH COUNT
SELECT continent, MAX(TOTAL_DEATHS) AS TOTAL_DEATH_COUNT
FROM SqlPortfolioProject..CovidDeaths
WHERE continent IS NOT NULL
GROUP BY continent
ORDER BY TOTAL_DEATH_COUNT DESC         -- CREATE VIEW

SELECT location, MAX(TOTAL_DEATHS) AS TOTAL_DEATH_COUNT
FROM SqlPortfolioProject..CovidDeaths
WHERE continent IS NULL
GROUP BY location
ORDER BY TOTAL_DEATH_COUNT DESC

-- GLOBAL NUMBERS
SELECT date, SUM(total_cases) AS TOTAL_WORLD_CASES, SUM(total_deaths) AS TOTAL_WORLD_DEATH, (SUM(total_deaths)/SUM(total_cases))*100 AS DEATH_RATE_PERCENTAGE
FROM SqlPortfolioProject..CovidDeaths
WHERE continent IS NOT NULL
-- AND location LIKE '%NIGERIA%'
GROUP BY date
ORDER BY 1, 2           

SELECT SUM(total_cases) AS TOTAL_WORLD_CASES, SUM(total_deaths) AS TOTAL_WORLD_DEATH, (SUM(total_deaths)/SUM(total_cases))*100 AS DEATH_RATE_PERCENTAGE
FROM SqlPortfolioProject..CovidDeaths
WHERE continent IS NOT NULL
-- AND location LIKE '%NIGERIA%'
-- GROUP BY date
ORDER BY 1, 2                    -- CREATE VIEW

-- TOTAL POPULATION VS VACCINATIONS
SELECT DEA.continent, DEA.location, DEA.date, population, NEW_VACCINATIONS,
SUM(NEW_VACCINATIONS) OVER (PARTITION BY DEA.LOCATION ORDER BY DEA.LOCATION, DEA.DATE) AS ROLL_TOTAL_VACCINATED
FROM SqlPortfolioProject..CovidDeaths DEA
JOIN SqlPortfolioProject..COVIDVACCINATIONS VAC
ON DEA.location = VAC.LOCATION
AND DEA.date = VAC.DATE
WHERE DEA.continent IS NOT NULL
ORDER BY 2, 3

-- USE CTE
WITH POPvsVAC (CONTINENT, LOCATION, DATE, POPULATION, NEW_VACCINATIONS, ROLL_TOTAL_VACCINATED)
AS
(
SELECT DEA.continent, DEA.location, DEA.date, population, NEW_VACCINATIONS,
SUM(NEW_VACCINATIONS) OVER (PARTITION BY DEA.LOCATION ORDER BY DEA.LOCATION, DEA.DATE) AS ROLL_TOTAL_VACCINATED
FROM SqlPortfolioProject..CovidDeaths DEA
JOIN SqlPortfolioProject..COVIDVACCINATIONS VAC
ON DEA.location = VAC.LOCATION
AND DEA.date = VAC.DATE
WHERE DEA.continent IS NOT NULL
-- ORDER BY 2, 3
)
SELECT *, (ROLL_TOTAL_VACCINATED/POPULATION)*100
FROM POPvsVAC


-- TEMP TABLE
DROP TABLE IF EXISTS #PERCENT_POPULATION_VACCINATED 
CREATE TABLE #PERCENT_POPULATION_VACCINATED
(
CONTINENT NVARCHAR(255),
LOCATION NVARCHAR(255),
DATE DATE,
POPULATION NUMERIC,
NEW_VACCINATIONS NUMERIC,
ROLL_TOTAL_VACCINATED NUMERIC
)

INSERT INTO #PERCENT_POPULATION_VACCINATED
SELECT DEA.continent, DEA.location, DEA.date, population, NEW_VACCINATIONS,
SUM(NEW_VACCINATIONS) OVER (PARTITION BY DEA.LOCATION ORDER BY DEA.LOCATION, DEA.DATE) AS ROLL_TOTAL_VACCINATED
FROM SqlPortfolioProject..CovidDeaths DEA
JOIN SqlPortfolioProject..COVIDVACCINATIONS VAC
ON DEA.location = VAC.LOCATION
AND DEA.date = VAC.DATE
WHERE DEA.continent IS NOT NULL
-- ORDER BY 2, 3

SELECT *, (ROLL_TOTAL_VACCINATED/POPULATION)*100
FROM #PERCENT_POPULATION_VACCINATED

-- CREATING VIEW FOR LATER VISUALIZATIONS
DROP VIEW IF EXISTS PERCENTAGE_POPULATION_VACCINATED

CREATE VIEW PERCENTAGE_POPULATION_VACCINATED
AS 
SELECT DEA.continent, DEA.location, DEA.date, population, NEW_VACCINATIONS,
SUM(NEW_VACCINATIONS) OVER (PARTITION BY DEA.LOCATION ORDER BY DEA.LOCATION, DEA.DATE) AS ROLL_TOTAL_VACCINATED
FROM SqlPortfolioProject..CovidDeaths DEA
JOIN SqlPortfolioProject..COVIDVACCINATIONS VAC
ON DEA.location = VAC.LOCATION
AND DEA.date = VAC.DATE
WHERE DEA.continent IS NOT NULL
-- ORDER BY 2, 3

SELECT *
FROM PERCENTAGE_POPULATION_VACCINATED